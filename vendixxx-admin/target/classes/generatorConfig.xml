<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC
        "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>

    <!--导入属性配置-->
    <context id="dssql" targetRuntime="MyBatis3">

        <!-- 生成注释为false 不生成为true 【不生成注释时会被重复写入导致报错】 -->
        <commentGenerator>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        <!--jdbc的数据库连接 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql:/127.0.0.1:3306/ypsx_monitor_0?nullCatalogMeansCurrent=true"
                        userId="root"
                        password="123456">
        </jdbcConnection>

        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
    targetPackage     指定生成的model生成所在的包名
    targetProject     指定在该项目下所在的路径
-->
        <javaModelGenerator targetPackage="com.vendixxx.monitor.admin.repository.bean"
                            targetProject="./src/main/java">
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="false"/>
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="false"/>
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true"/>
            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
            <property name="immutable" value="false"/>
            <property name="rootClass" value="com.vendixxx.monitor.admin.repository.BaseEntity"/>
        </javaModelGenerator>

        <!--mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->
        <sqlMapGenerator targetPackage="mappers" targetProject="./src/main/resources">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!-- targetPackage：mapper接口dao生成的位置 -->
        <javaClientGenerator type="ANNOTATEDMAPPER" targetPackage="com.vendixxx.monitor.admin.repository.dao"
                             targetProject="./src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false"/>
            <property name="rootInterface"
                      value="com.vendixxx.monitor.admin.repository.dao.BaseMapper"></property>
        </javaClientGenerator>

        <!--<table tableName="monitor_data_input" domainObjectName="MonitorDataInput"
               enableCountByExample="true"
               enableUpdateByExample="true"
               enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">
            <columnOverride column="header" jdbcType="VARCHAR"></columnOverride>
            <columnOverride column="body" jdbcType="VARCHAR"></columnOverride>
        </table>-->

        <!--<table tableName="monitor_switch" domainObjectName="MonitorSwitch"
               enableCountByExample="true"
               enableUpdateByExample="true"
               enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">
        </table>-->


    </context>
</generatorConfiguration>


